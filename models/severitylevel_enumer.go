// Code generated by "enumer -type=SeverityLevel -trimprefix=SeverityLevel"; DO NOT EDIT.

package models

import (
	"fmt"
	"strings"
)

const _SeverityLevelName = "LowMediumHigh"

var _SeverityLevelIndex = [...]uint8{0, 3, 9, 13}

const _SeverityLevelLowerName = "lowmediumhigh"

func (i SeverityLevel) String() string {
	if i >= SeverityLevel(len(_SeverityLevelIndex)-1) {
		return fmt.Sprintf("SeverityLevel(%d)", i)
	}
	return _SeverityLevelName[_SeverityLevelIndex[i]:_SeverityLevelIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _SeverityLevelNoOp() {
	var x [1]struct{}
	_ = x[SeverityLevelLow-(0)]
	_ = x[SeverityLevelMedium-(1)]
	_ = x[SeverityLevelHigh-(2)]
}

var _SeverityLevelValues = []SeverityLevel{SeverityLevelLow, SeverityLevelMedium, SeverityLevelHigh}

var _SeverityLevelNameToValueMap = map[string]SeverityLevel{
	_SeverityLevelName[0:3]:       SeverityLevelLow,
	_SeverityLevelLowerName[0:3]:  SeverityLevelLow,
	_SeverityLevelName[3:9]:       SeverityLevelMedium,
	_SeverityLevelLowerName[3:9]:  SeverityLevelMedium,
	_SeverityLevelName[9:13]:      SeverityLevelHigh,
	_SeverityLevelLowerName[9:13]: SeverityLevelHigh,
}

var _SeverityLevelNames = []string{
	_SeverityLevelName[0:3],
	_SeverityLevelName[3:9],
	_SeverityLevelName[9:13],
}

// SeverityLevelString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SeverityLevelString(s string) (SeverityLevel, error) {
	if val, ok := _SeverityLevelNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _SeverityLevelNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to SeverityLevel values", s)
}

// SeverityLevelValues returns all values of the enum
func SeverityLevelValues() []SeverityLevel {
	return _SeverityLevelValues
}

// SeverityLevelStrings returns a slice of all String values of the enum
func SeverityLevelStrings() []string {
	strs := make([]string, len(_SeverityLevelNames))
	copy(strs, _SeverityLevelNames)
	return strs
}

// IsASeverityLevel returns "true" if the value is listed in the enum definition. "false" otherwise
func (i SeverityLevel) IsASeverityLevel() bool {
	for _, v := range _SeverityLevelValues {
		if i == v {
			return true
		}
	}
	return false
}
